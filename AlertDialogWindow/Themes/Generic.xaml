<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helper="clr-namespace:AlertDialogWindow.Helper"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:toolkit="clr-namespace:AlertDialogWindow.Toolkit"
                    xmlns:view="clr-namespace:AlertDialogWindow.View">

    <FontFamily x:Key="DefaultFontStyle">Microsoft YaHei,宋体</FontFamily>

    <!-- 基本文本颜色 -->
    <SolidColorBrush x:Key="BaseTextColor" RenderOptions.CachingHint="Cache" Color="#333333" />

    <DropShadowEffect x:Key="Window_Border_DropShadowEffect"
                      BlurRadius="6" Opacity="0.5"
                      RenderingBias="Performance"
                      ShadowDepth="0" Color="#80000000" />
    <!-- -窗体边框阴影 (非激活态) -->
    <DropShadowEffect x:Key="Window_Border_DropShadowEffect_Deactivated"
                      BlurRadius="5"
                      RenderingBias="Performance"
                      ShadowDepth="0" Color="#4cececec" />

    <Storyboard x:Key="ShowDW">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0.2" />
            <EasingDoubleKeyFrame KeyTime="00:00:0.12" Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
            <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0.2" />
            <EasingDoubleKeyFrame KeyTime="00:00:0.12" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Effect" Value="{x:Null}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="{DynamicResource BaseTextColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <!-- ImageButton默认样式 -->
    <Style TargetType="{x:Type toolkit:ImageButton}" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type toolkit:ImageButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="DefaultedStoryboard" AutoReverse="True" FillBehavior="Stop" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeySpline="0.5, 0, 1, 0.75" KeyTime="00:00:1.5" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Image Name="normal" Source="{TemplateBinding NormalImage}" Stretch="Fill" />
                        <Image Name="hover" Opacity="0"
                               Source="{TemplateBinding HoverImage}"
                               Stretch="Fill" Visibility="Visible" />
                        <Image Name="down" Source="{TemplateBinding DownImage}" Stretch="Fill" Visibility="Collapsed" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                            <RemoveStoryboard BeginStoryboardName="sbDefaulted" />
                        </EventTrigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="sbDefaulted" Storyboard="{StaticResource DefaultedStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="sbDefaulted" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="down" Property="Visibility" Value="Visible" />
                            <Setter TargetName="hover" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="hover" Property="Opacity" Value="1" />
                            <Setter TargetName="normal" Property="Visibility" Value="Collapsed" />
                            <MultiTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="sbDefaulted" />
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ImageButton默认样式 -->

    <Style x:Key="BaseWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontStyle}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource BaseTextColor}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="WindowState" Value="Normal" />
        <Setter Property="WindowStyle" Value="None" />
    </Style>

    <!-- 弹出提示窗体模板 -->
    <ControlTemplate x:Key="AlertDialogBaseTemplate" TargetType="{x:Type Window}">
        <Border x:Name="border" Margin="0"
                Background="White" CornerRadius="3"
                RenderTransformOrigin="0.5,0.5">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <helper:EventToCommand Command="{Binding LoadedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Border.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                </TransformGroup>
            </Border.RenderTransform>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <toolkit:ImageButton Grid.Row="0" Width="16" Height="16"
                                     Margin="0,16,16,0"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Bottom"
                                     Command="{Binding CloseWinCommand}"
                                     CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                     DownImage="Images/AlterDialog/btnclose_hover.png"
                                     HoverImage="Images/AlterDialog/btnclose_hover.png"
                                     NormalImage="Images/AlterDialog/btnclose.png"
                                     ToolTip="关闭"
                                     Visibility="{Binding DialogMode, Converter={helper:EnumExcludeConverter}, ConverterParameter='Mini'}" />
                <ContentPresenter Grid.Row="1" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                <BeginStoryboard>
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Effect">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Null}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
                <RemoveStoryboard BeginStoryboardName="sbLoaded" />
            </EventTrigger>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard x:Name="sbLoaded" Storyboard="{StaticResource ShowDW}" />
            </EventTrigger>
            <Trigger Property="IsActive" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Effect">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.12" Value="{StaticResource Window_Border_DropShadowEffect}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Effect">
                                <DiscreteObjectKeyFrame KeyTime="00:00:.5" Value="{StaticResource Window_Border_DropShadowEffect_Deactivated}" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:.8" Value="{StaticResource Window_Border_DropShadowEffect}" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:01.1" Value="{StaticResource Window_Border_DropShadowEffect_Deactivated}" />
                                <DiscreteObjectKeyFrame KeyTime="00:00:01.5" Value="{StaticResource Window_Border_DropShadowEffect}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- 弹出提示窗体样式 -->
    <Style x:Key="AlterDailogBaseStyle" TargetType="{x:Type view:AlterDialogWindow}" BasedOn="{StaticResource BaseWindowStyle}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Height" Value="180" />
        <Setter Property="MaxHeight" Value="240" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource AlertDialogBaseTemplate}" />
        <Setter Property="Topmost" Value="False" />
        <Setter Property="Width" Value="400" />
        <Setter Property="WindowState" Value="Normal" />
        <Setter Property="WindowStyle" Value="None" />
    </Style>

    <Style TargetType="{x:Type view:AlterDialogWindow}" BasedOn="{StaticResource AlterDailogBaseStyle}" />
</ResourceDictionary>